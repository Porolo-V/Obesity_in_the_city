male_coefs[[1]] <- plot_graph(data_male$Weight, data_male$FM_BIA, "Weight vs FM_BIA", "Weight ", "FM_BIA")
male_coefs[[2]] <- plot_graph(data_male$Weight, data_male$FM_US, "Weight vs FM_US", "Weight ", "FM__US")
male_coefs[[3]] <- plot_graph(data_male$Weight, data_male$BF_BIA, "Weight vs BF_BIA", "Weight ", "BF_BIA")
male_coefs[[4]] <- plot_graph(data_male$Weight, data_male$BF_US, "Weight vs BF_US", "Weight", "BF__US ")
male_coefs[[5]] <- plot_graph(data_male$Weight, data_male$FFM_BIA, "Weight vs FFM_BIA", "Weight ", "FFM_BIA")
male_coefs[[6]] <- plot_graph(data_male$Weight, data_male$FFM_US, "Weight vs FFM_US", "Weight ", "FFM__US")
par(mfrow = c(3, 2))
female_coefs <- list()
female_coefs[[1]] <- plot_graph(data_female$Weight, data_female$FM_BIA, "Weight vs FM_BIA", "Weight", "FM_BIA")
female_coefs[[2]] <- plot_graph(data_female$Weight, data_female$FM_US, "Weight vs FM_US", "Weight ", "FM__US")
female_coefs[[3]] <- plot_graph(data_female$Weight, data_female$BF_BIA, "Weight vs BF_BIA", "Weight ", "BF_BIA")
female_coefs[[4]] <- plot_graph(data_female$Weight, data_female$BF_US, "Weight vs BF_US", "Weight", "BF__US ")
female_coefs[[5]] <- plot_graph(data_female$Weight, data_female$FFM_BIA, "Weight vs FFM_BIA", "Weight", "FFM_BIA")
female_coefs[[6]] <- plot_graph(data_female$Weight, data_female$FFM_US, "Weight vs FFM_US", "Weight", "FFM__US")
PB.reg <- mcreg(data$FM_BIA, data$FM_US, method.reg = "PaBa")
PB.reg@para
MCResult.plot(PB.reg, equal.axis = TRUE, x.lab = "FM_BIA", y.lab = "FM_US", points.col = "#FF7F5060", points.pch = 19, ci.area = TRUE, ci.area.col = "#0000FF50", main = "Passing Bablok Regression",  points.cex = 1)
PB.reg <- mcreg(data$BF_BIA, data$BF_US, method.reg = "PaBa")
PB.reg@para
MCResult.plot(PB.reg, equal.axis = TRUE, x.lab = "BF_BIA", y.lab = "BF_US", points.col = "#FF7F5060", points.pch = 19, ci.area = TRUE, ci.area.col = "#0000FF50", main = "Passing Bablok Regression", add.grid = FALSE, points.cex = 1)
PB.reg <- mcreg(data$FM_BIA, data$FM_US, method.reg = "PaBa")
PB.reg@para
MCResult.plot(PB.reg, equal.axis = TRUE, x.lab = "FM_BIA", y.lab = "FM_US", points.col = "#FF7F5060", points.pch = 19, ci.area = TRUE, ci.area.col = "#0000FF50", main = "Passing Bablok Regression",  points.cex = 1)
PB.reg <- mcreg(data$BF_BIA, data$BF_US, method.reg = "PaBa")
PB.reg@para
MCResult.plot(PB.reg, equal.axis = TRUE, x.lab = "BF_BIA", y.lab = "BF_US", points.col = "#FF7F5060", points.pch = 19, ci.area = TRUE, ci.area.col = "#0000FF50", main = "Passing Bablok Regression", add.grid = FALSE, points.cex = 1)
PB.reg <- mcreg(data$FFM_BIA, data$FFM_US, method.reg = "PaBa")
PB.reg@para
MCResult.plot(PB.reg, equal.axis = TRUE, x.lab = "BF_BIA", y.lab = "BF_US", points.col = "#FF7F5060", points.pch = 19, ci.area = TRUE, ci.area.col = "#0000FF50", main = "Passing Bablok Regression", add.grid = FALSE, points.cex = 1)
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1
)
return(plot)
}
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM: Passing-Bablok Regression")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF: Passing-Bablok Regression")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM: Passing-Bablok Regression")
# Объединение графиков в одну картинку
grid.arrange(plot_FM, plot_BF, plot_FFM, nrow = 1)
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM: Passing-Bablok Regression")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF: Passing-Bablok Regression")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM: Passing-Bablok Regression")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1
)
return(plot)
}
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM: Passing-Bablok Regression")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF: Passing-Bablok Regression")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM: Passing-Bablok Regression")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1,
sub = ""
)
return(plot)
}
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1.5,
sub = ""
)
return(plot)
}
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 4,
sub = ""
)
return(plot)
}
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1,
sub = ""
)
return(plot)
}
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1,
sub = ""
)
return(plot)
}
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1,
sub = ""
)
return(plot)
}
par(mfrow = c(1, 3))
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
library(gridExtra)
# Функция для расчета Passing-Bablok регрессии и создания графика
create_pb_plot <- function(x, y, x_lab, y_lab, title) {
reg <- mcreg(x, y, method.reg = "PaBa")
print(reg@para)  # Отображение параметров регрессии
plot <- MCResult.plot(
reg,
equal.axis = TRUE,
x.lab = x_lab,
y.lab = y_lab,
points.col = "#FF7F5060",
points.pch = 19,
ci.area = TRUE,
ci.area.col = "#0000FF50",
main = title,
add.grid = FALSE,
points.cex = 1,
sub = ""
)
return(plot)
}
# Построение графиков для всех наборов данных
plot_FM <- create_pb_plot(data$FM_BIA, data$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data$BF_BIA, data$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data$FFM_BIA, data$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
plot_FM <- create_pb_plot(data_female$FM_BIA, data_female$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data_female$BF_BIA, data_female$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data_female$FFM_BIA, data_female$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
plot_FM <- create_pb_plot(data_male$FM_BIA, data_male$FM_US, x_lab = "FM_BIA", y_lab = "FM_US", title = "FM")
plot_BF <- create_pb_plot(data_male$BF_BIA, data_male$BF_US, x_lab = "BF_BIA", y_lab = "BF_US", title = "BF")
plot_FFM <- create_pb_plot(data_male$FFM_BIA, data_male$FFM_US, x_lab = "FFM_BIA", y_lab = "FFM_US", title = "FFM")
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE,
fig.align='center')
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
#setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
data <- read_xlsx("InstBioinf.xlsx")
data <- data %>%
mutate(
Sex = case_when(
Sex %in% c("M", "М") ~ "Male",
Sex %in% c("F", "Ж") ~ "Female"
) %>% as.factor(),
across(where(is.character), ~ round(as.numeric(.x), 1)),
BMI = round(Weight / (Height / 100)^2, 2),
# Создаем категорию BMI
BMI_category = cut(
BMI,
breaks = c(-Inf, 18.5, 25, 30, 40, Inf),
labels = c("Недостаточный", "Норма", "Избыточный", "Ожирение", "Морбидное ожирение"),
include.lowest = TRUE
)
)
4.75e-02
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE,
fig.align='center')
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
#setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
#setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
data <- read_xlsx("InstBioinf.xlsx")
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE,
fig.align='center')
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
data <- read_xlsx("InstBioinf.xlsx")
data <- read_xlsx("InstBioinf.xlsx")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE,
fig.align='center')
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
#setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE,
fig.align='center')
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE,
fig.align='center')
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
knitr::opts_chunk$set(
echo = TRUE,
error = FALSE,
fig.align = "center",
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
data <- read_xlsx("InstBioinf.xlsx")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("~/")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
knitr::opts_chunk$set(
echo = TRUE,
error = FALSE,
fig.align = "center",
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
data <- read_xlsx("InstBioinf.xlsx")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
data <- read_xlsx("InstBioinf.xlsx")
data <- read_xlsx("InstBioinf.xlsx")
data <- read_xlsx("InstBioinf.xlsx")
data <- read_xlsx("InstBioinf.xlsx")
data <- read_xlsx("InstBioinf.xlsx")
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
knitr::opts_chunk$set(
echo = TRUE,
error = FALSE,
fig.align = "center",
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readxl)
library(psych)
library(flextable)
library(GGally)
library(epiR)
library(smplot2)
library(gridExtra)
library(grid)
library(BlandAltmanLeh)
library(plotly)
library(viridis)
library(broom)
library(lmtest)
library(sandwich)
setwd("C:/Users/vtish/Desktop/Biostat2024/group_proj/prog2/data")
data <- read_xlsx("InstBioinf.xlsx")
data <- read_xlsx("data/InstBioinf.xlsx")
data <- data %>%
mutate(
Sex = case_when(
Sex %in% c("M", "М") ~ "Male",
Sex %in% c("F", "Ж") ~ "Female"
) %>% as.factor(),
across(where(is.character), ~ round(as.numeric(.x), 1)),
BMI = round(Weight / (Height / 100)^2, 2),
# Создаем категорию BMI
BMI_category = cut(
BMI,
breaks = c(-Inf, 18.5, 25, 30, 40, Inf),
labels = c("Недостаточный", "Норма", "Избыточный", "Ожирение", "Морбидное ожирение"),
include.lowest = TRUE
)
)
